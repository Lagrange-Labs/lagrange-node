syntax = "proto3";

package network.v1;

import "sequencer/v1/block.proto";

option go_package = "github.com/Lagrange-Labs/lagrange-node/network/types";

// NetworkService is the service for the attestation network
service NetworkService {
    // JoinNetwork is the rpc endpoint for joining the network
    rpc JoinNetwork(JoinNetworkRequest) returns (JoinNetworkResponse);
    // GetBlock is the rpc endpoint for getting the given block at the client node
    rpc GetBlock(GetBlockRequest) returns (GetBlockResponse);
    // CommitBlock is the rpc endpoint for committing the given block with signature at the client node
    rpc CommitBlock(CommitBlockRequest) returns (CommitBlockResponse);
}

// JoinNetworkRequest is the request to join the network
message JoinNetworkRequest {
    string public_key = 1;
    string stake_address = 2;
    string signature = 3;
}

// JoinNetworkResponse is the response for joining the network
message JoinNetworkResponse {
    bool result = 1;
    string message = 2;
}

// GetBlockRequest is the request to get the given block 
message GetBlockRequest {
    uint64 block_number = 1;
    int32 chain_id = 2;
    string stake_address = 3;
}

// GetBlockResponse is the response for getting the given block
message GetBlockResponse {
    sequencer.v1.Block block = 1;
    uint64 current_block_number = 2;
}

// CommitBlockRequest is the request to commit the signature
message CommitBlockRequest {
    sequencer.v1.BlsSignature bls_signature = 1;
    uint64 epoch_number = 2;
    string pub_key = 3;
    string signature = 4;
}

// CommitBlockResponse is the response for uploading the signature
message CommitBlockResponse {
    bool result = 1;
    string message = 2;
}